clear;clc;
start_velocity= [10.5,10.1,9.9,9.3,9.1,9.9,8.1,8.3,8.2,8.2,8.1,8.0,7.7,7.1,6.9,6.0];
start_angle = [33,34,35,36,31,35,35,32,33,36,35,37,28,35,34,36];

%考虑空气阻力
%fun = @(p,X)X(:,1).*cosd(X(:,2)).*((X(:,1).*sind(X(:,2)) + ((X(:,1).*sind(X(:,2))).^2+2*p(1)*p(2)).^0.5)/p(1)) - p(3)*0.5./X(:,4).*(-X(:,3) + X(:,1).*cosd(X(:,2))).*(((X(:,1).*sind(X(:,2)) + ((X(:,1).*sind(X(:,2))).^2+2*p(1)*p(2)).^0.5)/p(1)).^2);
%fun_2 =@(p,X)X(:,4).*(-X(:,3) + X(:,1).*cosd(X(:,2)))/p(3).*(1 - exp(-p(3)./X(:,4).*((X(:,1).*sind(X(:,2)) + ((X(:,1).*sind(X(:,2))).^2+2*p(1)*p(2)).^0.5)/p(1)))) + X(:,3).*((X(:,1).*sind(X(:,2)) + ((X(:,1).*sind(X(:,2))).^2+2*p(1)*p(2)).^0.5)/p(1));


%考虑空气阻力和空气升力

%中间量
%ux = X(:,3).*cosd(X(:,5));
%uy = X(:,3).*sind(X(:,5));
%vx =X(:,1).*cosd(X(:,2));
%vy =X(:,1).*sind(X(:,2));
%./(X(:,4))
%t = (X(:,1).*sind(X(:,2)) + ((X(:,1).*sind(X(:,2))).^2 + 2*p(2)*(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)))).^0.5)./(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)));
%fun =@(p,X)(exp(-p(3)*t).*(p(1)*p(4) + p(3)^2*ux - p(4)^2*ux - p(3)^2*vx - 2*p(3)*p(4)*uy + p(3)*p(4)*vy))/p(3)^3 - (p(1)*p(4) + p(3)^2*ux - p(4)^2*ux - p(3)^2*vx - 2*p(3)*p(4)*uy + p(3)*p(4)*vy)/p(3)^3 + (t.*(p(1)*p(4) + p(3)^2*ux - p(4)^2*ux - 2*p(3)*p(4)*uy + p(3)*p(4)*vy))/p(3)^2 + ((t).^2.*(p(4)^2*ux - p(1)*p(4) + p(3)*p(4)*uy))/(2*p(3));
%fun =@(p,X)(exp(-p(3)*t).*(p(1)*p(4) + p(3)^2*X(:,3).*cosd(X(:,5)) - p(4)^2*X(:,3).*cosd(X(:,5)) - p(3)^2*X(:,1).*cosd(X(:,2)) - 2*p(3)*p(4)*X(:,3).*sind(X(:,5)) + p(3)*p(4)*X(:,1).*sind(X(:,2))))/p(3)^3 - (p(1)*p(4) + p(3)^2*X(:,3).*cosd(X(:,5)) - p(4)^2*X(:,3).*cosd(X(:,5)) - p(3)^2*X(:,1).*cosd(X(:,2)) - 2*p(3)*p(4)*X(:,3).*sind(X(:,5)) + p(3)*p(4)*X(:,1).*sind(X(:,2)))/p(3)^3 + (t.*(p(1)*p(4) + p(3)^2*X(:,3).*cosd(X(:,5)) - p(4)^2*X(:,3).*cosd(X(:,5)) - 2*p(3)*p(4)*X(:,3).*sind(X(:,5)) + p(3)*p(4)*X(:,1).*sind(X(:,2))))/p(3)^2 + ((t).^2.*(p(4)^2*X(:,3).*cosd(X(:,5)) - p(1)*p(4) + p(3)*p(4)*X(:,3).*sind(X(:,5))))/(2*p(3)); 

%公式
fun =@(p,X)(exp(-p(3)*((X(:,1).*sind(X(:,2)) + ((X(:,1).*sind(X(:,2))).^2 + 2*p(2)*(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)))).^0.5)./(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5))))).*(p(1)*p(4) + p(3)^2*X(:,3).*cosd(X(:,5)) - p(4)^2*X(:,3).*cosd(X(:,5)) - p(3)^2*X(:,1).*cosd(X(:,2)) - 2*p(3)*p(4)*X(:,3).*sind(X(:,5)) + p(3)*p(4)*X(:,1).*sind(X(:,2))))/p(3)^3 - (p(1)*p(4) + p(3)^2*X(:,3).*cosd(X(:,5)) - p(4)^2*X(:,3).*cosd(X(:,5)) - p(3)^2*X(:,1).*cosd(X(:,2)) - 2*p(3)*p(4)*X(:,3).*sind(X(:,5)) + p(3)*p(4)*X(:,1).*sind(X(:,2)))/p(3)^3 + (((X(:,1).*sind(X(:,2)) + ((X(:,1).*sind(X(:,2))).^2 + 2*p(2)*(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)))).^0.5)./(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)))).*(p(1)*p(4) + p(3)^2*X(:,3).*cosd(X(:,5)) - p(4)^2*X(:,3).*cosd(X(:,5)) - 2*p(3)*p(4)*X(:,3).*sind(X(:,5)) + p(3)*p(4)*X(:,1).*sind(X(:,2))))/p(3)^2 + (((X(:,1).*sind(X(:,2)) + ((X(:,1).*sind(X(:,2))).^2 + 2*p(2)*(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)))).^0.5)./(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)))).^2.*(p(4)^2*X(:,3).*cosd(X(:,5)) - p(1)*p(4) + p(3)*p(4)*X(:,3).*sind(X(:,5))))/(2*p(3)); 
fun_2 =@(p,X)((1 - p(3)*((X(:,1).*sind(X(:,2)) + ((X(:,1).*sind(X(:,2))).^2 + 2*p(2)*(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)))).^0.5)./(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)))) + 0.5*(p(3)*((X(:,1).*sind(X(:,2)) + ((X(:,1).*sind(X(:,2))).^2 + 2*p(2)*(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)))).^0.5)./(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5))))).^2).*(p(1)*p(4) + p(3)^2*X(:,3).*cosd(X(:,5)) - p(4)^2*X(:,3).*cosd(X(:,5)) - p(3)^2*X(:,1).*cosd(X(:,2)) - 2*p(3)*p(4)*X(:,3).*sind(X(:,5)) + p(3)*p(4)*X(:,1).*sind(X(:,2))))/p(3)^3 - (p(1)*p(4) + p(3)^2*X(:,3).*cosd(X(:,5)) - p(4)^2*X(:,3).*cosd(X(:,5)) - p(3)^2*X(:,1).*cosd(X(:,2)) - 2*p(3)*p(4)*X(:,3).*sind(X(:,5)) + p(3)*p(4)*X(:,1).*sind(X(:,2)))/p(3)^3 + (((X(:,1).*sind(X(:,2)) + ((X(:,1).*sind(X(:,2))).^2 + 2*p(2)*(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)))).^0.5)./(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)))).*(p(1)*p(4) + p(3)^2*X(:,3).*cosd(X(:,5)) - p(4)^2*X(:,3).*cosd(X(:,5)) - 2*p(3)*p(4)*X(:,3).*sind(X(:,5)) + p(3)*p(4)*X(:,1).*sind(X(:,2))))/p(3)^2 + (((X(:,1).*sind(X(:,2)) + ((X(:,1).*sind(X(:,2))).^2 + 2*p(2)*(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)))).^0.5)./(p(1) - p(4)*X(:,3).*cosd(X(:,5)) - p(3)*X(:,3).*sind(X(:,5)))).^2.*(p(4)^2*X(:,3).*cosd(X(:,5)) - p(1)*p(4) + p(3)*p(4)*X(:,3).*sind(X(:,5))))/(2*p(3)); 


%参数设置
%p(考虑空气升力时k为k/m)
Pi = 3.14;
k0 = 0.5*0.53*1.293*((0.05)^2)*Pi;
p = [9.81,1.5,0.0004,0.0005];
v = start_velocity(1);
a = start_angle(1);
m = 0.5;

%X(考虑空气升力时X(4)无用)
c_vf = -10:0.1:10;
c_velocity = zeros(size(c_vf));
c_velocity(:) = v;
c_angle = zeros(size(c_vf));
c_angle(:) = a;
c_m = zeros(size(c_vf));
c_m(:) = m;
c_phi = zeros(size(c_vf));
c_phi(:) = 0;

%不近似时落地距离和风速关系曲线
c_l = fun_2(p,[c_velocity',c_angle',c_vf',c_m',c_phi']);
figure;
plot(c_vf,c_l,'LineWidth', 2);
hold on;


%近似时落地距离和风速关系曲线
c_l = fun(p,[c_velocity',c_angle',c_vf',c_m',c_phi']);
plot(c_vf,c_l,'LineWidth', 2);
%l = fun(p,[v,a,10,0.5]);

%图像设置
legend('线性空气阻力（无近似）', '线性空气阻力（近似）');

xlabel('vf/(m/s)');
ylabel('length/m');

fig = gcf;
fig.PaperPositionMode = 'auto';
fig_pos = fig.PaperPosition;
fig.PaperSize = [fig_pos(3),fig_pos(4)];